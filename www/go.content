<h2>Go Programming Language</h2>
My musings with Go
<h4>Performance</h4>
<a href="#go/wti" >Tip of the iceberg</a>
<h4>Data Structures</h4>
<a href="#go/tree" >Tree</a>,
<a href="#go/trie" >Trie</a>,
<a href="#go/linkedList" >Linked List</a>,
<h4>Alogrithm</h4>
<a href="#go/sort" >Sort</a>
<h4>P of EAA</h4>
<a href="#go/poeaa" >Patterns</a>
<h4>Microservices</h4>
Simple <a href="#go/httpserver" >HTTP Server</a>, 
<a href="#go/protobuff" >Protocol Buffers</a>,
<a href="#go/grpc" >gRPC</a>
<h4>Concepts</h4>
<a href="#go/pointers" >Pointers</a>,
<a href="#go/goroutine" >Goroutine</a>,
<a href="#go/closure" >Closure</a>,
<a href="#go/etlpipe" >ETL Pipeline</a>,
<!--a href="#go/linkedList" >Linked List Reversal</a></br-->
<a href="#go/embedding" >Embedding</a>
<h4>Design patterns</h4>
<a href="#go/patterns" >Design patterns</a>
<h4>General</h4>
<a href="#go/binary" >A Go Program</a></br>
Unblocking the channel with a <a href="#go/queues" >Queue</a></br>
Process sychronization using a <a href="#go/dblocks" >DB lock</a></br>
<a href="#go/auth" >OAuth and SAML</a></br>
<a href="#go/testing" >Testing</a>
<h4>Good Reads</h4>
<a href="https://www.ardanlabs.com/blog/2017/05/language-mechanics-on-stacks-and-pointers.html" target="_">Stacks and Pointers</a>
