<h3><a href="#go" onclick="_().loadContent(this,'go','ContentBody');" >Go Programming Language</a> - Pointers</h3></p>
Reverse characters of a string in the given range.
<pre>
package main

import (
        "fmt"
)

func reversePointer(list []byte, start, end int) []byte {
        for i := 0; i < (start+end-2)/2; i++ {
                list[start+i-1], list[end-1-i] = list[end-1-i], list[start+i-1]
        }
        return list
}

func main() {
        var list = []byte{'A', 'B', 'C', 'D', 'E', 'F', 'G'}
        fmt.Printf("%s\n", list)
        reversePointer(list, 2, 5)
        fmt.Printf("%s\n", list)
}
</pre>
Output
<pre>
ABCDEFG
AEDCBFG
</pre>
Reflection
<pre>
package main

import (
        "fmt"
        "reflect"
)

func main() {
        var a int
        var i *int
        i = &a
        inc(&i)
        fmt.Println(a, &a, i, &i)
        inc(&a)
        fmt.Println(a, &a, i, &i)
}

func inc(v interface{}) {
        fmt.Println(reflect.ValueOf(v).Kind())
        fmt.Println(reflect.ValueOf(v).Type())
        switch reflect.ValueOf(v).Type().String() {
        case "**int":
                **v.(**int)++
        case "*int":
                *v.(*int)++
        default:
                panic("Unexpected input")
        }
}
</pre>
Output
<pre>
ptr
**int
1 0xc000012080 0xc000012080 0xc00000e030
ptr
*int
2 0xc000012080 0xc000012080 0xc00000e030
</pre>
