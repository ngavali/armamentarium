<h3><a href="#linux"  >GIT</a> - Basics</h3></p>
<b>IMP</b>: GIT doesn't store diff's of different versions of a given file. Instead it stores a complete snapshot of each commit using an efficient storage strategy to reduce the disk utilization. We shall talk more about it, but later.</p>
<center>
	<img src="/images/git.svg" width="400px" /></p><b>Fig.1. </b>Git flow
</center>
<pre>
git init ##initialize an empty repository
git remote add origin https://github.com/ngavali/rationalbear.git
git pull origin master
git push -u origin master
</pre>
Initialize a new empty repo
<pre>
ngavali@tesla:~$ mkdir git-repo
ngavali@tesla:~$ cd git-repo/
ngavali@tesla:~/git-repo$ git init
Initialized empty Git repository in /home/ngavali/git-repo/.git/
ngavali@tesla:~/git-repo$
ngavali@tesla:~/git-repo$ git status
On branch master

Initial commit

nothing to commit (create/copy files and use "git add" to track)
</pre>
Create some file(s) in the workspace
<pre>
ngavali@tesla:~/git-repo$ touch file.cpp
ngavali@tesla:~/git-repo$ git status
On branch master

Initial commit

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        file.cpp

nothing added to commit but untracked files present (use "git add" to track)
</pre>
Add file(s) to the staging area
<pre>
ngavali@tesla:~/git-repo$ git add file.cpp
ngavali@tesla:~/git-repo$ git status
On branch master

Initial commit

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)

        new file:   file.cpp

</pre>
Commit changes
<pre>
ngavali@tesla:~/git-repo$ git commit -m "first commit into master"
[master (root-commit) f3027d1] first commit into master
 1 file changed, 7 insertions(+)
 create mode 100644 file.cpp
ngavali@tesla:~/git-repo$ git status
On branch master
nothing to commit, working directory clean
ngavali@tesla:~/git-repo$ git log
commit f3027d1076c2eb6d0be93c8e3909a332ff7337d3
Author: gavali.nilesh80186 &lt;gavali.nilesh80186@gmail.com>
Date:   Mon Jan 11 14:21:26 2021 +0530

    first commit into master
</pre>
Create a branch using git branch command
<pre>
ngavali@tesla:~/git-repo$ git branch feature1
ngavali@tesla:~/git-repo$ git branch
  feature1
* master
ngavali@tesla:~/git-repo$ git checkout feature1
Switched to branch 'feature1'
ngavali@tesla:~/git-repo$ git branch
* feature1
  master
</pre>
Create a branch using git checkout command
<pre>
ngavali@tesla:~/git-repo$ git branch
* master
ngavali@tesla:~/git-repo$ git checkout -b feature1
Switched to a new branch 'feature1'
ngavali@tesla:~/git-repo$ git branch
* feature1
  master
</pre>
